services:
  # PostgreSQL + TimescaleDB (optional - not used yet, reserved for future time-series storage)
  # Currently using file-based storage (CSV/Parquet in ./data directory)
  # You can comment out this service if you don't need it
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: sigma_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sigma_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-sigma_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sigma_network
    profiles:
      - full  # Only start with: docker-compose --profile full up

  # Redis
  redis:
    image: redis:7-alpine
    container_name: sigma_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sigma_network
    command: redis-server --appendonly yes

  # Backend (FastAPI)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sigma_backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    depends_on:
      - redis  # PostgreSQL removed - not used yet (file-based storage)
    networks:
      - sigma_network
    command: uvicorn backend.api.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sigma_celery_worker
    env_file:
      - .env
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    depends_on:
      - redis
      - backend
    networks:
      - sigma_network
    command: celery -A backend.tasks.celery_app worker --loglevel=info

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sigma_celery_beat
    env_file:
      - .env
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    depends_on:
      - redis
      - backend
    networks:
      - sigma_network
    command: celery -A backend.tasks.celery_app beat --loglevel=info

  # Flower (Celery Monitoring)
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sigma_flower
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery_worker
    networks:
      - sigma_network
    command: celery -A backend.tasks.celery_app flower --port=5555

networks:
  sigma_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
