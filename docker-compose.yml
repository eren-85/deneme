version: "3.9"

services:
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: sigma_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-sigma}
      - POSTGRES_USER=${POSTGRES_USER:-sigma}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sigma}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sigma_network

  redis:
    image: redis:7-alpine
    container_name: sigma_redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sigma_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sigma_backend
    env_file:
      - .env
    working_dir: /app
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - sigma_network
    ports:
      - "8000:8000"
    command: uvicorn backend.api.main:app --host 0.0.0.0 --port 8000 --reload

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sigma_celery_worker
    env_file:
      - .env
    working_dir: /app
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    depends_on:
      - redis
      - backend
    networks:
      - sigma_network
    command: >
      celery -A backend.tasks.celery_app:celery_app worker -E --loglevel=info -Q celery,analysis,market,default

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sigma_celery_beat
    env_file:
      - .env
    working_dir: /app
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    depends_on:
      - redis
      - backend
    networks:
      - sigma_network
    command: >
      celery -A backend.tasks.celery_app:celery_app beat --loglevel=info --schedule=/app/data/celerybeat-schedule

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sigma_flower
    env_file:
      - .env
    working_dir: /app
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app/backend
      - ./data:/app/data
    depends_on:
      - redis
      - backend
      - celery_worker
    networks:
      - sigma_network
    ports:
      - "5555:5555"
    command: celery -A backend.tasks.celery_app:celery_app flower --port=5555

networks:
  sigma_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
